#include<bits/stdc++.h>
using namespace std;
int solve(int lps[],string pat,string st)
{
    int n=st.size(),m=pat.size(),cnt=0;
    int i=0,j=0;//i for st , j for pat
    while(i<n)
    {
        
        if(pat[j]==st[i])
        {
            i++;
            j++;
        }
        if(j==m)
        {
            cnt++;
            j=lps[j-1];
        }
        else if(i<n && pat[j]!=st[i])
            {
                if(j==0)
                {
                    i++;
                }
                else
                {
                    j=lps[j-1];
                }
            }
        
        
    }
    return cnt;
    
}
void prefix(int lps[],int m ,string pat)
{
    lps[0]=0;
    int i=1;
    int len=0,j=0;
    while(i<m)
    {
        if(pat[i]==pat[len])
        {
            len++;
            
            lps[i]=len;
            i++;
        }
        else
        {
            if(len==0)
            {
                lps[i]=0;
                i++;
            }
            else
            {
                len=lps[len-1];
            }
            
            
        }
        
        
    }
}
int main()
{
    string pat,st;
    cin>>pat>>st;
    int m=pat.size();
    int n=st.size();
    if(m>n)
    return 0;
    int lps[m];
    prefix(lps,m,pat);
    int cnt=solve(lps,pat,st);
    cout<<cnt;
}
